ph-ee-g2psandbox:
  ph-ee-engine:
    global:
      SPRING_PROFILES_ACTIVE: "bb"
      LOGGING_LEVEL_ROOT: "INFO"
      LOGGING_PATTERN_CONSOLE: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
      tenants: "rhino,gorilla,lion"
      DFSPIDS: "gorilla,lion"

    zeebe-operate-helm:
      enabled: true
      image:
        repository: camunda/operate
        tag: 1.1.0
      global:
        elasticsearch:
          host: "ph-ee-elasticsearch"
          clusterName: "ph-ee-elasticsearch"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: public
        path: /
        host: operate.sandbox.mifos.io
        tls:
          enabled: true

    camunda-platform:
      prometheusServiceMonitor:
        enabled: false

    elasticsearch:
      enabled: false
      #Single Node Solution
      clusterHealthCheckParams: "wait_for_status=yellow&timeout=100s"
      protocol: http
      master:
        readinessProbe:
          httpGet:
            allow-insecure: true
            username: elastic
            password: "{{ .Env.ELASTIC_PASSWORD }}"
            path: /_cluster/health?wait_for_status=yellow&timeout=5s
            port: 9200
          initialDelaySeconds: 30
      data:
        readinessProbe:
          httpGet:
            allow-insecure: true
            username: elastic
            password: "{{ .Env.ELASTIC_PASSWORD }}"
            path: /_cluster/health?wait_for_status=yellow&timeout=5s
            port: 9200
          initialDelaySeconds: 30
      # Shrink default JVM heap.
      esJavaOpts: "-Xmx512m -Xms512m"
      # Allocate smaller chunks of memory per pod.
      resources:
        requests:
          cpu: "500m"
          memory: "1024M"
        limits:
          cpu: "1000m"
          memory: "1024M"
      volumeClaimTemplate:
        # accessModes: [ "ReadWriteOnce" ]
        # storageClassName: "gp2"
        resources:
          requests:
            storage: 10Gi

    kibana:
      enabled: true
      readinessProbe:
        initialDelaySeconds: 45
        timeoutSeconds: 15
        successThreshold: 1
      protocol: http
      ingress:
        enabled: false
        className: "public"
        pathtype: "Prefix"
        annotations: { }
        # kubernetes.io/ingress.class: public
        # kubernetes.io/tls-acme: "true"
        hosts:
          - host: analytics.sandbox.mifos.io
            paths:
              - path: /
        #tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local

    operations:
      enabled: true
      mysql:
        enabled: false

    operationsmysql:
      enabled: false
      auth:
        database: "tenants"
        username: "mifos"
        password: "password"
        rootPassword: "mysql"
      initdbScripts:
        setup.sql: |-
          CREATE DATABASE messagegateway;
          CREATE DATABASE `rhino`;
          CREATE DATABASE `gorilla`;
          GRANT ALL PRIVILEGES ON `rhino`.* TO 'mifos';
          GRANT ALL PRIVILEGES ON `gorilla`.* TO 'mifos';
          GRANT ALL PRIVILEGES ON `lion`.* TO 'mifos';
          GRANT ALL ON *.* TO 'root'@'%';
          GRANT ALL PRIVILEGES ON messagegateway.* TO 'mifos';
          GRANT ALL PRIVILEGES ON `identity_account_mapper`.* TO 'mifos';
          GRANT ALL PRIVILEGES ON `voucher_management`.* TO 'mifos';

    ph_ee_connector_ams_mifos:
      enabled: true
      SPRING_PROFILES_ACTIVE: "fin12,bb"
      operations_app:
        datasource:
          host: "counselorservice.sytes.net"
      ams_local_enabled: true
      ams_local_interop_host: "https://fynams.sandbox.mifos.io/"
      ams_local_account_host: "https://fynams.sandbox.mifos.io/"
      ams_local_customer_host: "https://fynams.sandbox.mifos.io/"
      ams_local_auth_host: "https://fynams.sandbox.mifos.io/"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: public
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: ams-mifos.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: ph-ee-connector-ams-mifos
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    ph_ee_connector_mojaloop:
      enabled: true
      SPRING_PROFILES_ACTIVE: "bb"
      hostname: "mojaloop.sandbox.mifos.io"
      DFSPIDS: "gorilla,lion"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: nginx
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: mojaloop.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: ph-ee-connector-mojaloop-java
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    mockpayment:
      enabled: true
      hostname: " http://ph-ee-connector-mock-payment-schema:8080"
      ingress:
        enabled: true
        className: "public"
        annotations:
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/rewrite-target: /$2
        hosts:
          - host: ""
            paths:
            - path: /mock(/|$)(.*)
              backend:
                service:
                  name: ph-ee-connector-mock-payment-schema
                  port:
                    number: 80

    kafka:
      enabled: true
      image: "spotify/kafka"
      advertised:
        host: "kafka"
        port: "9092"
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    channel:
      enabled: true
      hostname: "channel.sandbox.mifos.io"
      stub_hostname: "channel-gsma.sandbox.mifos.io"
      SPRING_PROFILES_ACTIVE: "bb,tenants"
      DFSPIDS: "rhino,gorilla"
      operations:
        url: "http://ph-ee-operations-app:5000/api/v1"
        authEnabled: false
      tenantPrimary:
        clientId: "mifos"
        clientSecret: "password"
        tenant: "rhino"
      tenantSecondary:
        clientId: "mifos"
        clientSecret: "password"
        tenant: "gorilla"
      server:
        ssl:
          keyPassword: "password"
          keyStorePassword: "password"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: channel.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-connector-channel"
                    port:
                      number: 8443
          - host: channel-gsma.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-connector-channel-gsma"
                    port:
                      number: 82
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"


    operations_app:
      enabled: true
      tenants: "rhino,gorilla"
      hostname: "ops-bk.sandbox.mifos.io"
      datasource:
        username: "mifos"
        password: "password"
        host: "counselorservice.sytes.net"
        port: 3306
        schema: "tenants"
      limits:
        memory: "2Gi"
        cpu: "1000m"
      requests:
        memory: "516M"
        cpu: "500m"  
      ingress:
        enabled: true
        className: "public"
        annotations:
          nginx.ingress.kubernetes.io/cors-allow-headers: 'platform-tenantid'
          nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
          nginx.ingress.kubernetes.io/cors-allow-origin: '*'
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/rewrite-target: /$2
        # tls:
        #   - secretName: sandbox-secret
        hosts:
          - host: ""        
            paths: 
            - path: "/operations(/|$)(.*)"
              backend:
                service:
                  name: "ph-ee-operations-app"
                  port:
                    number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    operations_web:
      enabled: true
      hostname: "ops.sandbox.mifos.io"
      SPRING_PROFILES_ACTIVE: "bb"
      ingress:
        enabled: false
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: ops.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-operations-web"
                    port:
                      number: 4200
    identity:
      hostname: "ops-bk.sandbox.mifos.io"

    ph_ee_connector_gsma:
      enabled: true
      SPRING_PROFILES_ACTIVE: "bb"
      limits:
        cpu: "500m"
        memory: "512M"
      requests:
        cpu: "100m"
        memory: "256M"
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    ph_ee_connector_slcb:
      enabled: false

    mpesa:
      enabled: false

    roster_connector:
      enabled: false

    paygops_connector:
      enabled: false

    notifications:
      enabled: true
      imagePullPolicy: "Always"
      SPRING_PROFILES_ACTIVE: "bb"
      LOGGING_LEVEL_ROOT: "INFO"
      MESSAGEGATEWAYCONFIG_HOST: "message-gateway"
      NOTIFICATION_LOCAL_HOST: "ph-ee-connector-notifications"
      NOTIFICATION_SUCCESS_ENABLED: "false"
      NOTIFICATION_FAILURE_ENABLED: "true"
      hostname: "notifications.sandbox.mifos.io"
      limits:
        cpu: "1000m"
        memory: "1Gi"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: nginx
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: notifications.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-connector-notifications"
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    connector_bulk:
      enabled: true
      tenant: "rhino,gorilla"
      hostname: bulk-connector.sandbox.mifos.io
      aws:
        region: "ap-south-1"
        access_key: "<access_key>"
        secret_key: "<secret_key>"
      operations_app:
        contactpoint: "https://ops-bk.sandbox.mifos.io/"
        endpoints:
          batch_transaction: "/api/v1/batch/transactions"
      identity_account_mapper:
        hostname: "https://identity-mapper.sandbox.mifos.io:80"
      service:
        annotations:
          konghq.com/protocol: "https"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: public
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: bulk-connector.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-connector-bulk"
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"
          
    zeebe_ops:
      enabled: true
      hostname: "zeebeops.sandbox.mifos.io"
      tenants: "rhino,gorilla"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: nginx
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: zeebeops.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "ph-ee-zeebe-ops"
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    messagegateway:
      enabled: true
      DATASOURCE_URL: jdbc:mysql:thin://counselorservice.sytes.net:3306/messagegateway
      operations_app:
        datasource:
          host: "counselorservice.sytes.net"
      secret:
        value:
          # api_key: "<api_key>"
          # project_id: "<project_id>"
          api_key: "eKiC1_JWdKy7eaTGQFHxXXjXjacr60W9Zntl"
          project_id: "PJ5ff552ce01d2978c"
      hostname: "messagegateway.sandbox.mifos.io"
      ingress:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: nginx
        tls:
          - secretName: sandbox-secret
        hosts:
          - host: messagegateway.sandbox.mifos.io
            paths:
              - path: "/"
                backend:
                  service:
                    name: "message-gateway"
                    port:
                      number: 80
      deployment:
        annotations:
          deployTime: "{{ .Values.deployTime }}"

    importer_es:
      enabled: true
      elasticsearch_sslverification: false
      elasticsearch_security_enabled: false
      reporting:
        enabled: false

    importer_rdbms:
      enabled: true
      LOGGING_LEVEL_ROOT: "DEBUG"
      aws:
        region: "us-east-1"
      datasource:
        username: "mifos"
        password: "password"
        host: "counselorservice.sytes.net"
        port: 3306
        schema: "tenants"

    keycloak:
      enabled: true
      ingress:
        enabled: false
        ingressClassName: "kong"
        rules:
          - host: 'keycloak.sandbox.mifos.io'
            paths:
              - path: /
                pathType: Prefix
        tls: [ ]

    kong:
      enabled: true
      image:
        repository: revomatico/docker-kong-oidc
        tag: "latest"
      env:
        database: "postgres"
        pg_host: "g2p-sandbox-postgresql"
        pg_user: "keycloak"
        pg_password: "keycloak"
        pg_database: "kong"
        plugins: "bundled,oidc"
      admin:
        enabled: true
        http:
          enabled: true
        tls:
          enabled: false
        ingress:
          enabled: false
          hostname: admin-kong.sandbox.mifos.io

    vouchers:
      enabled: true
      spring:
        datasource:
          url: "jdbc:mysql://counselorservice.sytes.net:3306/voucher_management"
          username: "mifos"
          password: "password"
          
  account_mapper:
    spring:
      datasource:
        url: jdbc:mysql:thin://counselorservice.sytes.net:3306/identity_account_mapper
        username: mifos
        password: password
    requests:
      cpu: "100m"
      memory: "256M"


